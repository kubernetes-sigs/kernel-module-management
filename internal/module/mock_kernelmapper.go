// Code generated by MockGen. DO NOT EDIT.
// Source: kernelmapper.go

// Package module is a generated GoMock package.
package module

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/kubernetes-sigs/kernel-module-management/api/v1beta1"
	v1 "k8s.io/api/core/v1"
)

// MockKernelMapper is a mock of KernelMapper interface.
type MockKernelMapper struct {
	ctrl     *gomock.Controller
	recorder *MockKernelMapperMockRecorder
}

// MockKernelMapperMockRecorder is the mock recorder for MockKernelMapper.
type MockKernelMapperMockRecorder struct {
	mock *MockKernelMapper
}

// NewMockKernelMapper creates a new mock instance.
func NewMockKernelMapper(ctrl *gomock.Controller) *MockKernelMapper {
	mock := &MockKernelMapper{ctrl: ctrl}
	mock.recorder = &MockKernelMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKernelMapper) EXPECT() *MockKernelMapperMockRecorder {
	return m.recorder
}

// FindMappingForKernel mocks base method.
func (m *MockKernelMapper) FindMappingForKernel(mappings []v1beta1.KernelMapping, kernelVersion string) (*v1beta1.KernelMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMappingForKernel", mappings, kernelVersion)
	ret0, _ := ret[0].(*v1beta1.KernelMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMappingForKernel indicates an expected call of FindMappingForKernel.
func (mr *MockKernelMapperMockRecorder) FindMappingForKernel(mappings, kernelVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMappingForKernel", reflect.TypeOf((*MockKernelMapper)(nil).FindMappingForKernel), mappings, kernelVersion)
}

// GetNodeOSConfig mocks base method.
func (m *MockKernelMapper) GetNodeOSConfig(node *v1.Node) *NodeOSConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeOSConfig", node)
	ret0, _ := ret[0].(*NodeOSConfig)
	return ret0
}

// GetNodeOSConfig indicates an expected call of GetNodeOSConfig.
func (mr *MockKernelMapperMockRecorder) GetNodeOSConfig(node interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeOSConfig", reflect.TypeOf((*MockKernelMapper)(nil).GetNodeOSConfig), node)
}

// GetNodeOSConfigFromKernelVersion mocks base method.
func (m *MockKernelMapper) GetNodeOSConfigFromKernelVersion(kernelVersion string) *NodeOSConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeOSConfigFromKernelVersion", kernelVersion)
	ret0, _ := ret[0].(*NodeOSConfig)
	return ret0
}

// GetNodeOSConfigFromKernelVersion indicates an expected call of GetNodeOSConfigFromKernelVersion.
func (mr *MockKernelMapperMockRecorder) GetNodeOSConfigFromKernelVersion(kernelVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeOSConfigFromKernelVersion", reflect.TypeOf((*MockKernelMapper)(nil).GetNodeOSConfigFromKernelVersion), kernelVersion)
}

// PrepareKernelMapping mocks base method.
func (m *MockKernelMapper) PrepareKernelMapping(mapping *v1beta1.KernelMapping, osConfig *NodeOSConfig) (*v1beta1.KernelMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrepareKernelMapping", mapping, osConfig)
	ret0, _ := ret[0].(*v1beta1.KernelMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrepareKernelMapping indicates an expected call of PrepareKernelMapping.
func (mr *MockKernelMapperMockRecorder) PrepareKernelMapping(mapping, osConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareKernelMapping", reflect.TypeOf((*MockKernelMapper)(nil).PrepareKernelMapping), mapping, osConfig)
}
