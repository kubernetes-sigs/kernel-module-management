// Code generated by MockGen. DO NOT EDIT.
// Source: config.go
//
// Generated by this command:
//
//	mockgen -source=config.go -package=worker -destination=mock_config.go
//
// Package worker is a generated GoMock package.
package worker

import (
	reflect "reflect"

	v1beta1 "github.com/kubernetes-sigs/kernel-module-management/api/v1beta1"
	gomock "go.uber.org/mock/gomock"
)

// MockConfigHelper is a mock of ConfigHelper interface.
type MockConfigHelper struct {
	ctrl     *gomock.Controller
	recorder *MockConfigHelperMockRecorder
}

// MockConfigHelperMockRecorder is the mock recorder for MockConfigHelper.
type MockConfigHelperMockRecorder struct {
	mock *MockConfigHelper
}

// NewMockConfigHelper creates a new mock instance.
func NewMockConfigHelper(ctrl *gomock.Controller) *MockConfigHelper {
	mock := &MockConfigHelper{ctrl: ctrl}
	mock.recorder = &MockConfigHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigHelper) EXPECT() *MockConfigHelperMockRecorder {
	return m.recorder
}

// ReadConfigFile mocks base method.
func (m *MockConfigHelper) ReadConfigFile(path string) (*v1beta1.ModuleConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadConfigFile", path)
	ret0, _ := ret[0].(*v1beta1.ModuleConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadConfigFile indicates an expected call of ReadConfigFile.
func (mr *MockConfigHelperMockRecorder) ReadConfigFile(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadConfigFile", reflect.TypeOf((*MockConfigHelper)(nil).ReadConfigFile), path)
}
