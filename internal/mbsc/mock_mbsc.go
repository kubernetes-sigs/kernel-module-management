// Code generated by MockGen. DO NOT EDIT.
// Source: mbsc.go
//
// Generated by this command:
//
//	mockgen -source=mbsc.go -package=mbsc -destination=mock_mbsc.go
//
// Package mbsc is a generated GoMock package.
package mbsc

import (
	context "context"
	reflect "reflect"

	v1beta1 "github.com/kubernetes-sigs/kernel-module-management/api/v1beta1"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
	v10 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MockMBSC is a mock of MBSC interface.
type MockMBSC struct {
	ctrl     *gomock.Controller
	recorder *MockMBSCMockRecorder
}

// MockMBSCMockRecorder is the mock recorder for MockMBSC.
type MockMBSCMockRecorder struct {
	mock *MockMBSC
}

// NewMockMBSC creates a new mock instance.
func NewMockMBSC(ctrl *gomock.Controller) *MockMBSC {
	mock := &MockMBSC{ctrl: ctrl}
	mock.recorder = &MockMBSCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMBSC) EXPECT() *MockMBSCMockRecorder {
	return m.recorder
}

// CreateOrPatch mocks base method.
func (m *MockMBSC) CreateOrPatch(ctx context.Context, name, namespace string, moduleImageSpec *v1beta1.ModuleImageSpec, imageRepoSecret *v1.LocalObjectReference, owner v10.Object) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrPatch", ctx, name, namespace, moduleImageSpec, imageRepoSecret, owner)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrPatch indicates an expected call of CreateOrPatch.
func (mr *MockMBSCMockRecorder) CreateOrPatch(ctx, name, namespace, moduleImageSpec, imageRepoSecret, owner any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrPatch", reflect.TypeOf((*MockMBSC)(nil).CreateOrPatch), ctx, name, namespace, moduleImageSpec, imageRepoSecret, owner)
}

// Get mocks base method.
func (m *MockMBSC) Get(ctx context.Context, name, namespace string) (*v1beta1.ModuleBuildSignConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, name, namespace)
	ret0, _ := ret[0].(*v1beta1.ModuleBuildSignConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMBSCMockRecorder) Get(ctx, name, namespace any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMBSC)(nil).Get), ctx, name, namespace)
}
