// Code generated by MockGen. DO NOT EDIT.
// Source: helper.go

// Package build is a generated GoMock package.
package build

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/kubernetes-sigs/kernel-module-management/api/v1beta1"
)

// MockHelper is a mock of Helper interface.
type MockHelper struct {
	ctrl     *gomock.Controller
	recorder *MockHelperMockRecorder
}

// MockHelperMockRecorder is the mock recorder for MockHelper.
type MockHelperMockRecorder struct {
	mock *MockHelper
}

// NewMockHelper creates a new mock instance.
func NewMockHelper(ctrl *gomock.Controller) *MockHelper {
	mock := &MockHelper{ctrl: ctrl}
	mock.recorder = &MockHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelper) EXPECT() *MockHelperMockRecorder {
	return m.recorder
}

// ApplyBuildArgOverrides mocks base method.
func (m *MockHelper) ApplyBuildArgOverrides(args []v1beta1.BuildArg, overrides ...v1beta1.BuildArg) []v1beta1.BuildArg {
	m.ctrl.T.Helper()
	varargs := []interface{}{args}
	for _, a := range overrides {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ApplyBuildArgOverrides", varargs...)
	ret0, _ := ret[0].([]v1beta1.BuildArg)
	return ret0
}

// ApplyBuildArgOverrides indicates an expected call of ApplyBuildArgOverrides.
func (mr *MockHelperMockRecorder) ApplyBuildArgOverrides(args interface{}, overrides ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{args}, overrides...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyBuildArgOverrides", reflect.TypeOf((*MockHelper)(nil).ApplyBuildArgOverrides), varargs...)
}

// GetRelevantBuild mocks base method.
func (m *MockHelper) GetRelevantBuild(mod v1beta1.Module, km v1beta1.KernelMapping) *v1beta1.Build {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelevantBuild", mod, km)
	ret0, _ := ret[0].(*v1beta1.Build)
	return ret0
}

// GetRelevantBuild indicates an expected call of GetRelevantBuild.
func (mr *MockHelperMockRecorder) GetRelevantBuild(mod, km interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelevantBuild", reflect.TypeOf((*MockHelper)(nil).GetRelevantBuild), mod, km)
}
