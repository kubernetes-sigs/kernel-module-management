apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: system
  labels:
    control-plane: controller
spec:
  selector:
    matchLabels:
      control-plane: controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: kmm.node.kubernetes.io/control-plane
                operator: Exists
      securityContext:
        runAsNonRoot: true
      containers:
      - image: controller:latest
        name: manager
        env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: RELATED_IMAGES_BUILD
            value: gcr.io/kaniko-project/executor:latest
          - name: RELATED_IMAGES_SIGN
            value: signer
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
          - name: metrics
            containerPort: 8443
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 384Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Equal
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Equal
          effect: NoSchedule
