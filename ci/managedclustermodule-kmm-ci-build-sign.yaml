apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: allow-klusterlet-deploy-kmm-modules
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: klusterlet-deploy-modules
        spec:
          severity: high
          object-templates:
          - complianceType: mustonlyhave
            objectDefinition:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRole
              metadata:
                name: kmm-module-manager
              rules:
                - apiGroups: [kmm.sigs.x-k8s.io]
                  resources: [modules]
                  verbs: [create, delete, get, list, patch, update, watch]
          - complianceType: mustonlyhave
            objectDefinition:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRoleBinding
              metadata:
                name: klusterlet-kmm
              subjects:
              - kind: ServiceAccount
                name: klusterlet-work-sa
                namespace: open-cluster-management-agent
              roleRef:
                kind: ClusterRole
                name: kmm-module-manager
                apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: all-managed-clusters
spec:
  clusterSelector:
    matchExpressions: []
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: bind-klusterlet-kmm-all-clusters
placementRef:
  apiGroup: apps.open-cluster-management.io
  kind: PlacementRule
  name: all-managed-clusters
subjects:
  - apiGroup: policy.open-cluster-management.io
    kind: Policy
    name: allow-klusterlet-deploy-kmm-modules
---
apiVersion: hub.kmm.sigs.x-k8s.io/v1beta1
kind: ManagedClusterModule
metadata:
  name: kmm-ci
spec:
  spokeNamespace: kmm-operator-system
  selector:
    cluster.open-cluster-management.io/clusterset: default
  moduleSpec:
    moduleLoader:
      container:
        modprobe:
          moduleName: kmm_ci_a
        imagePullPolicy: Always
        kernelMappings:
        - regexp: '^.+$'
          containerImage: host.minikube.internal:5000/$MOD_NAMESPACE/$MOD_NAME:$KERNEL_FULL_VERSION
          registryTLS:
            insecure: true
          build:
            baseImageRegistryTLS:
              insecure: true
            dockerfileConfigMap:
              name: kmm-kmod-dockerfile
          sign:
            keySecret:
              name: kmm-kmod-signing-key
            certSecret:
              name: kmm-kmod-signing-cert
            unsignedImageRegistryTLS:
              insecure: true
            filesToSign:
              - /bin/getconf
    selector:
      node-role.kubernetes.io/worker: ""
