#!/usr/bin/env bash

set -euxo pipefail

check_module_not_loaded () {
  local module_name="$1"

  echo "Check that the ${module_name} module is not loaded on the node..."
  if minikube ssh -- lsmod | grep "${module_name}"; then
   echo "Unexpected lsmod output - ${module_name} is loaded on the node"
   return 1
  fi
}

echo "Deploy KMM..."
make deploy

check_module_not_loaded "kmm_ci_a"
check_module_not_loaded "kmm_ci_b"

echo "Load the dummy module to be removed by the worker Pod before loading kmm-ci"
minikube ssh -- sudo modprobe dummy

echo "Verify that dummy is loaded"
minikube ssh -- lsmod | grep dummy

echo "Create a build secret..."
oc create secret generic build-secret --from-literal=ci-build-secret=super-secret-value

echo "Add a configmap that contain the kernel module build dockerfile..."
kubectl apply -f ci/kmm-kmod-dockerfile.yaml

echo "Add Secrets containing the signing key and certificate..."
kubectl apply -f ci/secret_kmm-kmod-signing.yaml

kubectl wait --for=condition=Available deployment/kmm-operator-controller -n kmm-operator-system

echo "Add an kmm-ci Module that contains a valid mapping..."
kubectl apply -f ci/module-kmm-ci-build-sign.yaml

echo "Check that the module gets loaded on the node..."
timeout 10m bash -c 'until minikube ssh -- lsmod | grep kmm_ci_a; do sleep 3; done'

echo "Check that the dependent module is also loaded on the node..."
if ! minikube ssh -- lsmod | grep kmm_ci_b; then
  echo "Unexpected lsmod output - kmm_ci_b is not loaded on the node"
  return 1
fi

check_module_not_loaded "dummy"

echo "Remove the Module..."
kubectl delete -f ci/module-kmm-ci-build-sign.yaml --wait=false

echo "Check that the module gets unloaded from the node..."
timeout 1m bash -c 'until ! minikube ssh -- lsmod | grep kmm_ci_a; do sleep 3; done'

echo "Check that the dependent module is also unloaded from the node..."
check_module_not_loaded "kmm_ci_b"

echo "Wait for the Module to be deleted..."
kubectl wait --for delete modules.kmm.sigs.x-k8s.io/kmm-ci
