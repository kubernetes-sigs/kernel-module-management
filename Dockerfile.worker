# Build the manager binary
FROM golang:1.21-alpine3.18 as builder

RUN ["apk", "add", "bash", "make"]

WORKDIR /workspace

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN ["go", "mod", "download"]

# Copy the go source
COPY api api
COPY cmd/worker cmd/worker
COPY internal internal

# Copy Makefile
COPY Makefile Makefile
COPY docs.mk docs.mk

# Copy the .git directory which is needed to store the build info
COPY .git .git

# Build
RUN ["make", "worker"]

FROM alpine:3.18

RUN ["apk", "add", "ca-certificates", "kmod"]

WORKDIR /

COPY --from=builder /workspace/worker /usr/local/bin/worker

RUN ["addgroup", "-Sg", "201", "kmm"]
RUN ["adduser", "-DSs", "/sbin/nologin", "-u", "201", "-G", "kmm", "kmm"]
RUN ["mkdir", "-p", "/var/run/kmm/images", "/var/run/kmm/pull-secrets"]
RUN ["chown", "-R", "201:201", "/var/run/kmm/images", "/var/run/kmm/pull-secrets"]

USER 201:201

ENTRYPOINT ["/usr/local/bin/worker"]
