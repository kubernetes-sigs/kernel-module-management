name: e2e

on: [pull_request]

env:
  GO_VERSION: '1.20'

jobs:

  build-operator-image:
    runs-on: ubuntu-latest

    name: Build the KMMO container image

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build the image
        run: make docker-build IMG=kmm:local

      - name: Export the image
        run: docker save -o kmm_local.tar kmm:local

      - name: Upload the image
        uses: actions/upload-artifact@v3
        with:
          name: ci-images
          if-no-files-found: error
          path: kmm_local.tar
          retention-days: 1

  in-cluster-build:

    runs-on: ubuntu-latest
    name: in-cluster-build
    needs: [build-operator-image]

    services:
      registry:
        image: registry:2
        ports: ['5000:5000/tcp']

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create the minikube cluster
        uses: ./.github/actions/create-minikube-cluster
        with:
          start-args: --insecure-registry=host.minikube.internal:5000

      - name: Download container images
        uses: actions/download-artifact@v3
        with:
          name: ci-images

      - name: Import the KMMO image into minikube
        run: minikube image load kmm_local.tar

      - name: Cache binaries needed by Makefile
        id: cache-bin
        uses: actions/cache@v3
        with:
          path: ./bin
          key: ${{ runner.os }}-bin-${{ env.GO_VERSION }}-${{ hashFiles('Makefile') }}

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
        if: steps.cache-bin.outputs.cache-hit != 'true'

      - name: Run test
        run: ./ci/prow/e2e-incluster-build
        env:
          KUSTOMIZE_CONFIG_DEFAULT: ci/install-ci

      - name: Collect troubleshooting data
        uses: ./.github/actions/collect-troubleshooting
        if: ${{ always() }}
